// Code generated by MockGen. DO NOT EDIT.
// Source: repository/indexPersonRepository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	repository "go_practice/repository"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIIndexPersonRepository is a mock of IIndexPersonRepository interface.
type MockIIndexPersonRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIIndexPersonRepositoryMockRecorder
}

// MockIIndexPersonRepositoryMockRecorder is the mock recorder for MockIIndexPersonRepository.
type MockIIndexPersonRepositoryMockRecorder struct {
	mock *MockIIndexPersonRepository
}

// NewMockIIndexPersonRepository creates a new mock instance.
func NewMockIIndexPersonRepository(ctrl *gomock.Controller) *MockIIndexPersonRepository {
	mock := &MockIIndexPersonRepository{ctrl: ctrl}
	mock.recorder = &MockIIndexPersonRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIIndexPersonRepository) EXPECT() *MockIIndexPersonRepositoryMockRecorder {
	return m.recorder
}

// GetPersons mocks base method.
func (m *MockIIndexPersonRepository) GetPersons() ([]repository.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersons")
	ret0, _ := ret[0].([]repository.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersons indicates an expected call of GetPersons.
func (mr *MockIIndexPersonRepositoryMockRecorder) GetPersons() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersons", reflect.TypeOf((*MockIIndexPersonRepository)(nil).GetPersons))
}
