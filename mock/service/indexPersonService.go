// Code generated by MockGen. DO NOT EDIT.
// Source: service/indexPersonService.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	repository "go_practice/repository"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIIndexSavingService is a mock of IIndexSavingService interface.
type MockIIndexSavingService struct {
	ctrl     *gomock.Controller
	recorder *MockIIndexSavingServiceMockRecorder
}

// MockIIndexSavingServiceMockRecorder is the mock recorder for MockIIndexSavingService.
type MockIIndexSavingServiceMockRecorder struct {
	mock *MockIIndexSavingService
}

// NewMockIIndexSavingService creates a new mock instance.
func NewMockIIndexSavingService(ctrl *gomock.Controller) *MockIIndexSavingService {
	mock := &MockIIndexSavingService{ctrl: ctrl}
	mock.recorder = &MockIIndexSavingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIIndexSavingService) EXPECT() *MockIIndexSavingServiceMockRecorder {
	return m.recorder
}

// IndexSaving mocks base method.
func (m *MockIIndexSavingService) IndexSaving() ([]repository.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IndexSaving")
	ret0, _ := ret[0].([]repository.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IndexSaving indicates an expected call of IndexSaving.
func (mr *MockIIndexSavingServiceMockRecorder) IndexSaving() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IndexSaving", reflect.TypeOf((*MockIIndexSavingService)(nil).IndexSaving))
}
